// –ü–õ–ê–í–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê –ö –ü–†–û–î–£–ö–¶–ò–ò
function scrollToProducts() {
    const productsSection = document.getElementById('products');
    if (productsSection) {
        productsSection.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    }
}

// –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ü–†–ò–ë–´–õ–ò
function calculateProfit() {
    const input = document.getElementById('portions');
    const result = document.getElementById('profit-result');
    
    if (input && result) {
        const portions = input.value;
        if (portions > 0) {
            const profit = portions * 100;
            result.innerHTML = '<h4>üíµ –ü—Ä–∏–±—ã–ª—å: ' + profit + '‚ÇΩ</h4>';
        } else {
            result.innerHTML = '<p style="color: #ff6b00;">–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π</p>';
        }
    }
}

// –ó–ê–ö–ê–ó –ß–ï–†–ï–ó TELEGRAM
function orderProduct(productName) {
    const message = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å: ' + productName;
    const url = 'https://t.me/share/url?text=' + encodeURIComponent(message);
    window.open(url, '_blank');
}

// –¢–ê–ô–ú–ï–† –û–ë–†–ê–¢–ù–û–ì–û –û–¢–°–ß–ï–¢–ê
function startTimer() {
    const timerElement = document.getElementById('timer');
    if (!timerElement) return;
    
    const targetDate = new Date();
    targetDate.setDate(targetDate.getDate() + 7);
    
    function updateTimer() {
        const now = new Date();
        const diff = targetDate - now;
        
        if (diff <= 0) {
            timerElement.innerHTML = '–£—Ä–æ–∂–∞–π –≥–æ—Ç–æ–≤! üéâ';
            return;
        }
        
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((diff % (1000 * 60)) / 1000);
        
        const hoursStr = hours.toString().padStart(2, '0');
        const minutesStr = minutes.toString().padStart(2, '0');
        const secondsStr = seconds.toString().padStart(2, '0');
        
        timerElement.innerHTML = days + ' –¥–Ω–µ–π ' + hoursStr + ':' + minutesStr + ':' + secondsStr;
    }
    
    setInterval(updateTimer, 1000);
    updateTimer();
}

// –ê–ù–ò–ú–ê–¶–ò–ò –ü–†–ò –°–ö–†–û–õ–õ–ï
function initAnimations() {
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, { 
        threshold: 0.1 
    });

    const cards = document.querySelectorAll('.product-card, .benefit-card, .money-card');
    cards.forEach(function(card) {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
}

// –û–ë–†–ê–ë–û–¢–ö–ê –ö–õ–ò–ö–û–í –ü–û –ö–û–ù–¢–ê–ö–¢–ê–ú
function setupContactButtons() {
    const contactButtons = document.querySelectorAll('.contact-btn');
    contactButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            const platform = this.classList[1];
            console.log('–ö–ª–∏–∫ –ø–æ ' + platform);
        });
    });
}

// –ó–ê–ü–£–°–ö –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï –°–¢–†–ê–ù–ò–¶–´
document.addEventListener('DOMContentLoaded', function() {
    initAnimations();
    startTimer();
    setupContactButtons();
    
    console.log('üåµ –°–∞–π—Ç –ì–∏–¥—Ä–æ–§–µ—Ä–º—ã –∑–∞–≥—Ä—É–∂–µ–Ω!');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é –ø—Ä–∏–±—ã–ª—å –≤ –∫–æ–Ω—Å–æ–ª–∏
    const totalProfit = 3 * 100;
    console.log('üí∞ –ü—Ä–∏–±—ã–ª—å —Å –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: ~' + totalProfit + '‚ÇΩ');
});